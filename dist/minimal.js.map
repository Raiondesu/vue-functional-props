{"version":3,"file":"minimal.js","sources":["../src/index.ts"],"sourcesContent":["import { SetupContext } from 'vue';\n\nexport type TProp<T> = { (): T } | { new(...args: never[]): T & object } | { new(...args: string[]): Function };\n\nexport type TPropType<T> = TProp<T> | TProp<T>[];\n\nexport interface IPropOptions<T = any> {\n  type?: TPropType<T>;\n  required?: boolean;\n  default?: T | null | undefined | (() => T | null | undefined);\n  validator?(value: T): boolean;\n}\n\nexport type PropValidator<T> = IPropOptions<T> | TPropType<T>;\n\n/**\n * Creates a TS-valid vue prop definition from a simple object\n * @param options simple vue property definition\n */\nexport const prop = <T>(options: PropValidator<T>) => options;\n\ntype LambdaFunction = (...args: any) => any | (new (...args: any) => any);\n\ntype VuePropsTemplate = Record<string, IPropOptions>;\n\ntype PropsTypesFlat<P extends Record<string, TPropType<any>>> = {\n  [key in keyof P]: P[key] extends LambdaFunction\n    ? ReturnType<P[key]>\n    : {};\n};\n\ntype PropsTypes<P extends VuePropsTemplate> = {\n  [key in keyof P]: P[key] extends LambdaFunction\n    ? ReturnType<P[key]>\n    : P[key]['type'] extends LambdaFunction\n    ? ReturnType<P[key]['type']>\n    : {};\n};\n\ntype FinalPropsTemplate = VuePropsTemplate | Record<string, TPropType<any>>;\n\ntype FinalProps<P extends FinalPropsTemplate> = P extends VuePropsTemplate ? PropsTypes<P> : P extends Record<string, TPropType<any>> ? PropsTypesFlat<P> : any;\n\n/**\n * A simple function wrapper that accepts a standard vue props object definition and a setup function and adds props to the setup function definition\n *\n * @param props a props object definition\n * @param setup vue composition api setup function\n * @returns the same setup function\n */\nexport const withProps = <\n  P extends FinalPropsTemplate,\n  C extends SetupContext,\n  S extends (this: unknown, props: FinalProps<P>, context: C) => any\n>(props: P, setup: S): S => {\n  (setup as any).props = props;\n\n  return setup;\n};\n"],"names":["options","props","setup"],"mappings":"4NAmBoB,SAAIA,UAA8BA,eA+B7B,SAIvBC,EAAUC,UACTA,EAAcD,MAAQA,EAEhBC"}